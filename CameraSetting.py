#!/usr/bin/python
# -*- coding: utf-8 -*-

# Object Tracker program version 1.2 : a tool to track an object of a specified color with a camera.
# Copyright (C) 2017  Vanessa Dan, Eve Machefert and Alix Plamont
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#
# To contact us: <alix.plamont@etu.upmc.fr>.

# This is the GUI of the little widget which allows the user to choose a camera.
# This file has been generated by pyuic4 command, from a ui file we have made with QtDesigner.
# The generated code has been few modified.

from PyQt4 import QtCore, QtGui

try:
    _fromUtf8 = QtCore.QString.fromUtf8
except AttributeError:
    def _fromUtf8(s):
        return s

try:
    _encoding = QtGui.QApplication.UnicodeUTF8
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig, _encoding)
except AttributeError:
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig)

class CameraUI(object):
    def setupCameraUi(self, cameraUI):
        cameraUI.setObjectName(_fromUtf8("cameraUI"))
        cameraUI.resize(400, 200)
        cameraUI.setMinimumSize(QtCore.QSize(400, 200))
        cameraUI.setMaximumSize(QtCore.QSize(400, 200))
        self.OKBtn = QtGui.QPushButton(cameraUI)
        self.OKBtn.setGeometry(QtCore.QRect(330, 160, 60, 30))
        self.OKBtn.setMinimumSize(QtCore.QSize(60, 30))
        self.OKBtn.setMaximumSize(QtCore.QSize(60, 30))
        self.OKBtn.setObjectName(_fromUtf8("OKBtn"))
        self.refreshBtn = QtGui.QPushButton(cameraUI)
        self.refreshBtn.setGeometry(QtCore.QRect(330, 130, 60, 30))
        self.refreshBtn.setMinimumSize(QtCore.QSize(60, 30))
        self.refreshBtn.setMaximumSize(QtCore.QSize(60, 30))
        self.refreshBtn.setObjectName(_fromUtf8("refreshBtn"))
        self.textZone = QtGui.QPlainTextEdit(cameraUI)
        self.textZone.setGeometry(QtCore.QRect(5, 5, 320, 190))
        self.textZone.setMinimumSize(QtCore.QSize(320, 190))
        self.textZone.setMaximumSize(QtCore.QSize(320, 190))
        self.textZone.setReadOnly(True)
        self.textZone.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByMouse)
        self.textZone.setObjectName(_fromUtf8("textZone"))
        self.cameraChoice = QtGui.QComboBox(cameraUI)
        self.cameraChoice.setGeometry(QtCore.QRect(330, 10, 60, 30))
        self.cameraChoice.setMinimumSize(QtCore.QSize(60, 30))
        self.cameraChoice.setMaximumSize(QtCore.QSize(60, 30))
        self.cameraChoice.setMaxVisibleItems(3)
        self.cameraChoice.setMaxCount(1000)
        self.cameraChoice.setObjectName(_fromUtf8("cameraChoice"))

        self.retranslateUi(cameraUI)
        QtCore.QMetaObject.connectSlotsByName(cameraUI)

    def retranslateUi(self, cameraUI):
        cameraUI.setWindowTitle(_translate("cameraUI", "Camera setting", None))
        self.OKBtn.setText(_translate("cameraUI", "OK", None))
        self.refreshBtn.setText(_translate("cameraUI", "Refresh", None))


if __name__ == "__main__":
    import sys
    app = QtGui.QApplication(sys.argv)
    cameraUI = QtGui.QDialog()
    ui = CameraUI()
    ui.setupCameraUi(cameraUI)
    cameraUI.show()
    sys.exit(app.exec_())